(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{297:function(t,n,e){t.exports=e.p+"assets/img/run.dec39aae.png"},342:function(t,n,e){"use strict";e.r(n);var s=[function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("div",{staticClass:"content"},[s("h2",{attrs:{id:"testcode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#testcode","aria-hidden":"true"}},[t._v("#")]),t._v(" testcode")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('#include <stdio.h>\n#include <stdlib.h>\nint main()\n{\n    char *p1;\n    char *p2;\n    int i;\n    int len = 6;\n    int a;\n    p1 = malloc(1000*sizeof(char));\n    for(i=0;i<99;i++)\n    {\n        p1[i] = \'8\';\n    }\n    p1[99] = \'\\0\';\n    free(p1);\n    p2 = malloc(10*sizeof(char));\n    printf("%s\\n", p2);\n    memcpy(p2, "X://.:1234567", strlen("X://.:1234567"));    \n    printf("%s\\n", p2);\n    a = strtoul(p2 + len, 0, 0);\n    printf("%d\\n", a);\n}\n')])])]),s("h2",{attrs:{id:"log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#log","aria-hidden":"true"}},[t._v("#")]),t._v(" log")]),t._v(" "),s("p",[s("img",{attrs:{src:e(297),alt:""}}),t._v("\n链接：\nhttps://github.com/nodejs/http-parser/issues/408")])])}],a=e(1),i=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},s,!1,null,null,null);n.default=i.exports}}]);