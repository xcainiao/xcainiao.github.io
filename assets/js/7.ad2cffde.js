(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{292:function(t,e,a){t.exports=a.p+"assets/img/afdko-afl.a1b50208.png"},293:function(t,e,a){t.exports=a.p+"assets/img/afdko-email.a22886a7.png"},294:function(t,e,a){t.exports=a.p+"assets/img/afdko-github.9dfaa5e2.png"},367:function(t,e,a){"use strict";a.r(e);var r=[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_0x1-fuzzing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0x1-fuzzing","aria-hidden":"true"}},[this._v("#")]),this._v(" 0x1 fuzzing")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:a(292),alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_0x2-hang分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0x2-hang分析","aria-hidden":"true"}},[this._v("#")]),this._v(" 0x2 hang分析")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("1906 static void buildGIDNames(cfrCtx h) {\n1907     char *p;\n1908     long length;\n1909     long numGlyphs = h->glyphs.cnt;\n1910     unsigned short i;\n1911 \n1912     if (numGlyphs <= 0)\n1913         fatal(h, cfrErrNoGlyph);\n1914     dnaSET_CNT(h->post.fmt2.glyphNameIndex, numGlyphs);\n1915     for (i = 0; i < numGlyphs; i++) {\n1916         h->post.fmt2.glyphNameIndex.array[i] = i;\n1917     }\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("0x0000555555604929 in buildGIDNames (h=0x62a000000200) at /home/test/github/afdko/c/public/lib/source/cffread/cffread.c:1916\n1916           h->post.fmt2.glyphNameIndex.array[i] = i;\ngdb-peda$ p /d numGlyphs\n$5 = 66950\ngdb-peda$ p /d i\n$6 = 11499\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_0x3-漏洞修复"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0x3-漏洞修复","aria-hidden":"true"}},[this._v("#")]),this._v(" 0x3 漏洞修复")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("我把漏洞报送给psirt@adobe.com，很快漏洞就修复了。根据邮件回复，看起来这种问题只能算bug，不算security bug，就算我fuzz到afdko内存破坏类漏洞，Adobe也不为AFDKO申请CVE。\n"),e("img",{attrs:{src:a(293),alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("github修复commit\nhttps://github.com/adobe-type-tools/afdko/commit/e4c023d4b31515d7f8d0a73b2326d3a043e8668c\n截图\n"),e("img",{attrs:{src:a(294),alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_0x4-回头重看利用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0x4-回头重看利用","aria-hidden":"true"}},[this._v("#")]),this._v(" 0x4 回头重看利用")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_1、cve-2019-8017"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、cve-2019-8017","aria-hidden":"true"}},[this._v("#")]),this._v(" 1、cve-2019-8017")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('For example, it is possible to execute the AFDKO copy in CoolType.dll by opening a PDF file with an embedded font, and exporting it to a PostScript (.ps) or Encapsulated PostScript (.eps) document\nThe proof of concept is a PDF file with an embedded Type 1 font, which includes an extra "/FDArray 0" operator to set the length of FDArray to 0, as described above.\nWhen the poc.pdf file is opened with Adobe Acrobat Pro and converted to a PostScript document via "File > Export To > (Encapsulated) PostScript", the following crash occurs in Acrobat.exe:\n\n简单理解\nAdobe Acrobat Pro打开构造的pdf文件，导出成PostScript，Adobe Acrobat崩溃。\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2、cve-2019-1117"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、cve-2019-1117","aria-hidden":"true"}},[this._v("#")]),this._v(" 2、cve-2019-1117")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("Microsoft's DirectWrite library includes parts of AFDKO。\nOne example of a client application which uses Direct2D printing is Microsoft Edge. If a user opens a specially crafted website with an embedded OpenType variable font and decides to print it (to PDF, XPS, or another physical or virtual printer), the AFDKO code will execute with the attacker's font file as input. \n\n简单理解\nMicrosoft Edge 支持Direct2D printing.Microsoft Edge打开嵌入了OpenType字体的网页，然后打印网页成PDF、 XPS，AFDKO就会运行嵌入的字体。\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("<html>\n   <head>\n        <style>\n             @font-face { font-family: custom_font; font-weight: 1000; src: url('poc.otf'); } \n             h1 {\n                 font-family: custom_font\n                }\n        </style>\n    </head>\n    <body>\n        <h1>The quick brown fox jumps over the lazy dog.</h1>\n    </body>\n</html>\n")])])])}],n=a(1),s=Object(n.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("p",[t._v("看了几篇afdko漏洞分析的文章"),a("a",{attrs:{href:"https://github.com/xinali/AfdkoFuzz/tree/master/CVE-2019-1117",title:"github",target:"_blank",rel:"noopener noreferrer"}},[t._v("xinali"),a("OutboundLink")],1),t._v("、"),a("a",{attrs:{href:"https://bugs.chromium.org/p/project-zero/issues/list?can=1&q=finder%3Amjurczyk+reported%3A2019-apr-26",title:"project-zero",target:"_blank",rel:"noopener noreferrer"}},[t._v("project-zero"),a("OutboundLink")],1),t._v("。\n了解了afdko一些基础用法，而且afdko核心功能用C写的，如果我要运气好能fuzz出几个漏洞，也搞几个cve岂不美滋滋。\n我也试着用afl对afdko进行fuzz。一晚上之后，没有发现crash，倒是有一个hang。")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),a("p",[t._v("我简单分析了一下hang产生的原因：")]),t._v(" "),a("p",[t._v("函数buildGIDNames, 变量i的类型unsigned short, unsigned short的最大值为65535. 如果numGlyphs比65535大，程序就会一直在此处循环。")]),t._v(" "),t._m(3),a("p",[t._v("例如")]),t._v(" "),t._m(4),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),a("p",[t._v("回过头重新看project-zero的文章。")]),t._v(" "),t._m(8),t._v(" "),a("p",[t._v("两个CVE "),a("a",{attrs:{href:"https://www.exploit-db.com/exploits/47260",title:"cve-2019-8017",target:"_blank",rel:"noopener noreferrer"}},[t._v("cve-2019-8017"),a("OutboundLink")],1),t._v("、"),a("a",{attrs:{href:"https://bugs.chromium.org/p/project-zero/issues/detail?id=1829",title:"cve-2019-1117",target:"_blank",rel:"noopener noreferrer"}},[t._v("cve-2019-1117 "),a("OutboundLink")],1),t._v("。两个产品。")]),t._v(" "),t._m(9),t._v(" "),a("p",[t._v("Adobe Acrobat的漏洞")]),t._v(" "),t._m(10),t._m(11),t._v(" "),a("p",[t._v("Microsoft DirectWrite的漏洞")]),t._v(" "),t._m(12),a("p",[t._v("poc.html")]),t._v(" "),t._m(13),a("p",[t._v("我按照上面的方式进行试验，没有发现任何异常，对afdko的应用理解还不是很深入，无法完成利用。。。。。。。\n最后能利用的洞才是漏洞。。。。")])])},r,!1,null,null,null);e.default=s.exports}}]);