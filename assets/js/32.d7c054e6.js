(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{343:function(n,e,t){"use strict";t.r(e);var a=t(1),s=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"content"},[t("h2",{attrs:{id:"_0x1-persistentfuzzing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_0x1-persistentfuzzing","aria-hidden":"true"}},[n._v("#")]),n._v(" 0x1  PersistentFuzzing")]),n._v(" "),t("h3",{attrs:{id:"first"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#first","aria-hidden":"true"}},[n._v("#")]),n._v(" first")]),n._v(" "),t("p",[n._v("test.c")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("#include \"test.h\"\n\nint  VulnerableFunction1(char* data, int size) {\n  int result = 0;\n  char tmp[5];\n  if (size >= 3) {\n    tmp[size] = 'a';\n  }\n  return result;\n}\n")])])]),t("p",[n._v("test.h")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("#include <stdio.h>\n#include <stdlib.h>\nint VulnerableFunction1(char* data, int size);\n")])])]),t("p",[n._v("fuzz.c")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('#include "test.h"\n\nint LLVMFuzzerTestOneInput(char *data, int size) {\n      VulnerableFunction1(data, size);\n      return 0;\n}\n\n')])])]),t("p",[n._v("hfuzz-clang -o fuzz fuzz.c test.c -w\nhonggfuzz -f ./tmp/ -P -- ./fuzz")]),n._v(" "),t("h3",{attrs:{id:"second"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#second","aria-hidden":"true"}},[n._v("#")]),n._v(" second")]),n._v(" "),t("p",[n._v("test.c")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("#include \"test.h\"\n\nint  VulnerableFunction1(char* data, int size) {\n  int result = 0;\n  char tmp[5];\n  if (size >= 3) {\n  tmp[size] = 'a';\n  }\n  return result;\n}\n")])])]),t("p",[n._v("test.h")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("#include <stdio.h>\n#include<stdlib.h>\nint VulnerableFunction1(char* data, int size);\n")])])]),t("p",[n._v("fuzz.c")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('#include "test.h"\n//int LLVMFuzzerTestOneInput(char *data, int size) \n\nextern HF_ITER(char** buf, int* len);\nint main() \n{\n    while(1)\n    {\n        int len;\n        char *buf;\n        HF_ITER(&buf, &len);\n        VulnerableFunction1(buf, len);\n    }\n}\n')])])]),t("p",[n._v("hfuzz-clang fuzz.c  test.c -o hymodel ~/github/honggfuzz/libhfuzz/libhfuzz.a\nhonggfuzz -Q -f ./tmp/ -P -- ./hymodel")]),n._v(" "),t("h2",{attrs:{id:"_0x2-pretend-to-be-what-i-found"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_0x2-pretend-to-be-what-i-found","aria-hidden":"true"}},[n._v("#")]),n._v(" 0x2 Pretend to be what I found")]),n._v(" "),t("p",[n._v("https://www.exploit-db.com/exploits/42424/\nfuzz.c")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('extern HF_ITER(char** buf, int* len);\nint main()\n{\n    while(1){\n    int     ch;\n    char *  server_name = "127.0.0.1";\n    char *  server_ip = "0000:0000:0000:0000:0000:0000:0000:0000";\n    char    ipaddress[NS_MAXDNAME];\n    char    argv0[NS_MAXDNAME];\n    int     server_root = 0;\n    int     ipv6 = 0;\n    char *argv[1];\n\n    int len;\n    char *buf;\n\n    HF_ITER(&buf, &len);\n\n    argv[0] = buf;\n\n    if (argv[0] == NULL) usage();\n\n    // check for a trailing dot\n    strcpy(argv0, argv[0]);\n    if (argv0[strlen(argv[0]) - 1] == \'.\') argv0[strlen(argv[0]) - 1] = 0;\n\n    printf("Tracing to %s[%s] via %s, maximum of %d retries\\n",\n    argv0, rr_types[global_querytype], server_name, global_retries);\n\n    srandom(time(NULL));\n\n    {\n    struct hostent *h = NULL;\n\n#ifndef NOIPV6\n    h = gethostbyname2(server_name, AF_INET6);\n#endif\n    if (h == NULL || global_noipv6)\n        h = gethostbyname2(server_name, AF_INET);\n    if (h == NULL) {\n        fprintf(stderr, "Cannot find IP address for %s\\n", server_name);\n        return 1;\n    }\n    if (h->h_addrtype == AF_INET) {\n        unsigned char *s = h->h_addr_list[0];\n        sprintf(ipaddress, "%hu.%hu.%hu.%hu", s[0], s[1], s[2], s[3]);\n        ipv6 = 0;\n    } else {\n        unsigned char *s = h->h_addr_list[0];\n        sprintf(ipaddress,\n        "%02hx%02hx:%02hx%02hx:%02hx%02hx:%02hx%02hx:"\n        "%02hx%02hx:%02hx%02hx:%02hx%02hx:%02hx%02hx",\n        s[ 0], s[ 1], s[ 2], s[ 3], s[ 4], s[ 5], s[ 6], s[ 7],\n        s[ 8], s[ 9], s[10], s[11], s[12], s[13], s[14], s[15]);\n        ipv6 = 1;\n    }\n    }\n create_session(argv0, ipaddress, ipv6, server_name,\n    server_root == 0 ? NULL : ".", 0, "", 1);\n\n    printf("\\n");\n\n    if (global_overview != 0) {\n    printf("\\n");\n    display_arecords();\n    }\n    }\n    return 0;\n}\n')])])]),t("p",[n._v("fuzz output")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("------------------------[  0 days 00 hrs 00 mins 55 secs ]----------------------\n  Iterations : 111\n        Mode : [2/2] Feedback Driven Mode\n      Target : ./fuzz\n     Threads : 2, CPUs: 4, CPU%: 65% [16%/CPU]\n       Speed : 0/sec [avg: 2]\n     Crashes : 4 [unique: 1, blacklist: 0, verified: 0]\n    Timeouts : 105 [1 sec]\n Corpus Size : 4, max size: 8,192 bytes, init dir: 2 files\n  Cov Update : 0 days 00 hrs 00 mins 07 secs ago\n    Coverage : edge: 67 pc: 0 cmp: 699\n---------------------------------- [ LOGS ] ------------------/ honggfuzz 1.5 /-\n=>0x10007fff7ad0: 00 00[01]f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2\n  0x10007fff7ae0: f2 f2 f2 f2 00 f2 f2 f2 04 f2 00 f3 f3 f3 f3 f3\n  0x10007fff7af0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10007fff7b00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10007fff7b10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10007fff7b20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==15754==ABORTING\nCrash (dup): './SIGABRT.PC.7ffff6efa428.STACK.1b00c4c668.CODE.-6.ADDR.(nil).INSTR.cmp____$0xfffffffffffff000,%rax.fuzz' already exists, skipping\n[2018-04-13T15:41:48+0800][W][15630] subproc_checkTimeLimit():425 PID 15751 took too much time (limit 1 s). Killing it with SIGKILL\n[2018-04-13T15:41:48+0800][W][15631] arch_checkWait():309 Persistent mode: PID 15754 exited with status: SIGNALED, signal: 6 (Aborted)\nPersistent mode: Launched new persistent PID: 15759\n[2018-04-13T15:41:48+0800][W][15630] arch_checkWait():309 Persistent mode: PID 15751 exited with status: SIGNALED, signal: 9 (Killed)\nPersistent mode: Launched new persistent PID: 15760\nTracing to 11101113...\n                      1\n)�n/��[a] via 127.0.0.1, maximum of 3 retries\nTracing to 1111133���1���n/�������318n/ƞ1\n31\n\n3\n3\n3�m�K�1111[a] via 127.0.0.1, maximum of 3 retries\n^CSignal 2 (Interrupt) received, terminating\n[2018-04-13T15:41:49+0800][W][15631] subproc_checkTimeLimit():425 PID 15759 took too much time (limit 1 s). Killing it with SIGKILL\n[2018-04-13T15:41:49+0800][W][15630] subproc_checkTimeLimit():425 PID 15760 took too much time (limit 1 s). Killing it with SIGKILL\nTerminating thread no. #1\nTerminating thread no. #0\nAll threads done\n")])])])])}],!1,null,null,null);e.default=s.exports}}]);