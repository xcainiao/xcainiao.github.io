(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{362:function(e,a,t){"use strict";t.r(a);var n=t(1),s=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{staticClass:"content"},[t("h2",{attrs:{id:"_0x1-前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_0x1-前言","aria-hidden":"true"}},[e._v("#")]),e._v(" 0x1 前言")]),e._v(" "),t("p",[e._v("Squid是一个开源的高性能的代理缓存服务器。它接受来自客户端的请求并适当地处理这些请求。例如，如果一个人想下载一web页面，他请求Squid为他取得这个页面。Squid随之连接到远程服务器并向这个页面发出请求。然后，Squid显式地聚集数据到客户端机器，而且同时复制一份。当下一次有人需要同一页面时，Squid可以简单地从磁盘中读到它，那样数据迅即就会传输到客户机上。当前的Squid可以处理HTTP，FTP，GOPHER，SSL和WAIS等协议。")]),e._v(" "),t("p",[e._v("几个月之前，Synacktiv teams对Squid的源码进行审计，发现了几个漏洞，其中一个是在Digest authentication过程中触发的敏感信息泄漏漏洞。")]),e._v(" "),t("h2",{attrs:{id:"_0x2-漏洞复现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_0x2-漏洞复现","aria-hidden":"true"}},[e._v("#")]),e._v(" 0x2 漏洞复现")]),e._v(" "),t("p",[e._v("下载Squid有漏洞的版本，这里我选择了squid/3.5.28。\n编译安装")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("./configure --enable-auth --enable-auth-digest\nmake -j4\nmake install\n")])])]),t("p",[e._v("安装完成之后squid的主要目录结构如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("/usr/local/squid/\n    ├── sbin\n    │   └── squid             //squid程序\n    ├── libexec               //辅助程序\n    │   ├── basic_smb_auth\n    │   └── digest_file_auth\n    └── etc\n    │   └── squid.conf       //配置文件\n    └── logs                 //运行日志\n        ├── access.log\n        └── cache.log\n")])])]),t("p",[e._v("修改配置文件，增加一些内容开启digest auth。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("auth_param digest program <path to program>\nauth_param digest children 8\nauth_param digest realm Access to Squid\nauth_param digest nonce_garbage_interval 10 minutes\nauth_param digest nonce_max_duration 45 minutes\nauth_param digest nonce_max_count 100\nauth_param digest nonce_strictness on\n")])])]),t("p",[e._v("运行squid程序，通过squid代理，访问某个网站。返回header中nonce字段就是泄漏的内存地址。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('curl -I -x 192.168.6.22:3128 https://xz.aliyun.com/\n\nHTTP/1.1 407 Proxy Authentication Required\nServer: squid/3.5.28\nMime-Version: 1.0\nDate: Wed, 13 May 2020 13:28:15 GMT\nContent-Type: text/html;charset=utf-8\nContent-Length: 3526\nX-Squid-Error: ERR_CACHE_ACCESS_DENIED 0\nVary: Accept-Language\nContent-Language: en\nProxy-Authenticate: Digest realm="Access to Squid", nonce="7/W7XgAAAABwTjQEilUAAE+y+jgAAAAA", qop="auth", stale=false\nX-Cache: MISS from test\nVia: 1.1 test (squid/3.5.28)\nConnection: keep-alive\n')])])]),t("h2",{attrs:{id:"_0x3-漏洞分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_0x3-漏洞分析","aria-hidden":"true"}},[e._v("#")]),e._v(" 0x3 漏洞分析")]),e._v(" "),t("p",[e._v("漏洞发生在fixHeader函数。nonce变量通过authenticateDigestNonceNew函数申请，authenticateDigestNonceNonceb64取出nonce变量的值，通过httpHeaderPutStrf发送给客户端。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://xzfile.aliyuncs.com/media/upload/picture/20200515143239-df9787b8-9675-1.png",alt:""}})]),e._v(" "),t("p",[e._v("authenticateDigestNonceNonceb64函数单纯的取出了nonce->key的值，重点看下nonce变量和nonce->key的赋值过程。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://xzfile.aliyuncs.com/media/upload/picture/20200515143257-ea0f43d4-9675-1.png",alt:""}})]),e._v(" "),t("p",[e._v("函数authenticateDigestNonceNew申请nonce变量\n"),t("img",{attrs:{src:"https://xzfile.aliyuncs.com/media/upload/picture/20200515143310-f1e80758-9675-1.png",alt:""}})]),e._v(" "),t("p",[e._v("authDigestNonceEncode函数对nonce->noncedata的地址base64编码，赋值给nonce->key")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://xzfile.aliyuncs.com/media/upload/picture/20200515143324-fab0a822-9675-1.png",alt:""}})]),e._v(" "),t("p",[e._v("最后response header中的nonce字段就是base64编码之后的nonce->noncedata的地址。")]),e._v(" "),t("h2",{attrs:{id:"_0x4-修复方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_0x4-修复方式","aria-hidden":"true"}},[e._v("#")]),e._v(" 0x4 修复方式")]),e._v(" "),t("p",[e._v("nonce->noncedata的地址“编码/加密”方式从base64换成了md5。如果把x64地址全部用Md5计算一遍，还是可以通过暴力破解的方式，得到nonce->noncedata的地址。。。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://xzfile.aliyuncs.com/media/upload/picture/20200515143338-0279c228-9676-1.png",alt:""}})])])}],!1,null,null,null);a.default=s.exports}}]);