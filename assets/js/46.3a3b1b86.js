(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{329:function(a,f,e){"use strict";e.r(f);var n=e(1),t=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,f=a.$createElement,e=a._self._c||f;return e("div",{staticClass:"content"},[e("h2",{attrs:{id:"git-log"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-log","aria-hidden":"true"}},[a._v("#")]),a._v(" git log")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("commit db3f9f277f4283318a760791dac2bed9507b4793\nAuthor: Guy Harris <guy@alum.mit.edu>\nDate:   Mon May 14 01:52:54 2018 -0700\n")])])]),e("h2",{attrs:{id:"error"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#error","aria-hidden":"true"}},[a._v("#")]),a._v(" error")]),a._v(" "),e("p",[a._v("To reproduce: ./tcpdump -e -r ./poc.poc\nASAN output:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("=================================================================\n==25641==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60400000e010 at pc 0x000000486d08 bp 0x7fffffffc640 sp 0x7fffffffc630\nREAD of size 1 at 0x60400000e010 thread T0\n    #0 0x486d07 in sliplink_print print-sl.c:178\n    #1 0x486637 in sl_if_print print-sl.c:77\n    #2 0x40c912 in pretty_print_packet print.c:386\n    #3 0x40ae1a in print_packet tcpdump.c:2950\n    #4 0x7ffff6802ac3  (/usr/lib/x86_64-linux-gnu/libpcap.so.0.8+0x1eac3)\n    #5 0x7ffff67f31ce in pcap_loop (/usr/lib/x86_64-linux-gnu/libpcap.so.0.8+0xf1ce)\n    #6 0x4096cd in main tcpdump.c:2404\n    #7 0x7ffff643a82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\n    #8 0x403988 in _start (/home/fan/github/tcpdump_05_17/tcpdump+0x403988)\n\nAddressSanitizer can not describe address in more detail (wild memory access suspected).\nSUMMARY: AddressSanitizer: heap-buffer-overflow print-sl.c:178 sliplink_print\nShadow bytes around the buggy address:\n  0x0c087fff9bb0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c087fff9bc0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c087fff9bd0: fa fa fa fa fa fa fa fa fa fa 00 00 00 00 00 fa\n  0x0c087fff9be0: fa fa 00 00 00 00 00 fa fa fa fd fd fd fd fd fd\n  0x0c087fff9bf0: fa fa fd fd fd fd fd fd fa fa 00 00 00 00 00 06\n=>0x0c087fff9c00: fa fa[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c087fff9c10: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c087fff9c20: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c087fff9c30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c087fff9c40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c087fff9c50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Heap right redzone:      fb\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack partial redzone:   f4\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n==25641==ABORTING\n")])])]),e("p",[a._v("poc: https://github.com/xcainiao/poc/blob/master/tcpdump_heap-buffer-overflow_sliplink_print")])])}],!1,null,null,null);f.default=t.exports}}]);